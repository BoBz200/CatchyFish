#pragma once

#include <vector>
#include <string>

namespace Assets {

  std::vector<std::string> quit_text = {
    "  ___        _ _   ",
    " / _ \\ _   _(_) |_ ",
    "| | | | | | | | __|",
    "| |_| | |_| | | |_ ",
    " \\__\\_\\\\__,_|_|\\__|",
  };

  std::vector<std::string> play_text = {
    " ____  _             ",
    "|  _ \\| | __ _ _   _ ",
    "| |_) | |/ _` | | | |",
    "|  __/| | (_| | |_| |",
    "|_|   |_|\\__,_|\\__, |",
    "                |___/",
  };

  std::vector<std::string> title_text = {
  "  ____      _       _             _____ _     _     ",
  " / ___|__ _| |_ ___| |__  _   _  |  ___(_)___| |__  ",
  "| |   / _` | __/ __| '_ \\| | | | | |_  | / __| '_ \\ ",
  "| |__| (_| | || (__| | | | |_| | |  _| | \\__ \\ | | |",
  " \\____\\__,_|\\__\\___|_| |_|\\__, | |_|   |_|___/_| |_|",
  "                          |___/                     ",
  };

  std::vector<std::string> title_text2x = {
  "    ________            __              __                          __________  __          __         ",
  "   /        |          |  |            |  |                        |          |/  \\        |  |        ",
  "  /   ______| ____  __ |  | __  ______ |  | ____    __      __     |   _______|\\__/ ______ |  | ____   ",
  " |   |       /    \\|   |      |/      ||  ''    \\  |  |    |  |    |  |        |  |/       |  ''    \\  ",
  " |   |      /   __     |  ____/   ____||    __   \\ |  |    |  |    |  | __     |  /   ____ |    __   \\ ",
  " |   |     |   /  |    |  |  |   /     |   |  |  | |  |    |  |    |      |    |  \\       \\|   |  |   |", 
  " |   |____ |   \\__|    |  |__|   \\____ |   |  |  | |  | __ |  |    |    __|    |  |\\____   \\   |  |   |",
  "  \\         \\       ,  |\\    \\        ||   |  |  | \\          |    |   |       |  ||       /   |  |   |",
  "   \\ _______|\\ ____/|__| \\____\\ ______||__ |  |__|  \\______,  |    |___|       |__||______/|___|  |___|",
  "                                                     ,----'   /                                        ",
  "                                                     \\_______/                                         ",
  };

  std::vector<std::string> tutorial_text = {
  " _____      _             _       _ ",
  "|_   _|   _| |_ ___  _ __(_) __ _| |",
  "  | || | | | __/ _ \\| '__| |/ _` | |",
  "  | || |_| | || (_) | |  | | (_| | |",
  "  |_| \\__,_|\\__\\___/|_|  |_|\\__,_|_|",
  };

  std::vector<std::string> navigation_tip_text = {
    "(i)                                ",
    "Ways to navigate menus:",
    "[ Mouse ]",
    "[ Tab ]",
    "arrow keys:",
    " [ v ^ ] ",
    "vim keys:",
    " [ j k ] ",
  };

  std::vector<std::string> waiting_tip_text = {
    "(i)                                ",
    "While waiting for a fish",
    "the bobber will float up and down",
    "waiting could be 5 - 35 seconds",
    "",
    "To pause the game at any time press:",
    "[Esc]",
    "While paused you can:",
    "quit or view your collection",
  };

  std::vector<std::string> catching_tip_text = {
    "(i)                                ",
    "When the fish is on the hook,",
    "you will see an exclamation mark.",
    "To reel in the fish press:",
    "'b' and 'v'",
    "in alternating succession",
    "As you reel in the fish the bar",
    "on the left will increase.",
  };

  std::vector<std::string> resume_text = {
  " ____                               ",
  "|  _ \\ ___  ___ _   _ _ __ ___   ___",
  "| |_) / _ \\/ __| | | | '_ ` _ \\ / _ \\",
  "|  _ <  __/\\__ \\ |_| | | | | | |  __/",
  "|_| \\_\\___||___/\\__,_|_| |_| |_|\\___|",
  };

  std::vector<std::string> collection_text = {
  "  ____      _ _           _   _             ",
  " / ___|___ | | | ___  ___| |_(_) ___  _ __  ",
  "| |   / _ \\| | |/ _ \\/ __| __| |/ _ \\| '_ \\ ",
  "| |__| (_) | | |  __/ (__| |_| | (_) | | | |",
  " \\____\\___/|_|_|\\___|\\___|\\__|_|\\___/|_| |_|",
  };

  std::vector<std::string> b_button = {
    " __________   ",
    "|   _      |\\ ",
    "|  | |__   | |",
    "|  | '_ \\  | |",
    "|  | |_) | | |",
    "|  |_.__/  | |",
    "|__________| |",
    "\\___________\\|",
  };

  std::vector<std::string> b_button_pressed = {
    "  __________  ",
    " |   _      |`",
    " |  | |__   ||",
    " |  | '_ \\  ||",
    " |  | |_) | ||",
    " |  |_.__/  ||",
    " |__________||",
    " `-----------`",
  };

  std::vector<std::string> v_button = {
    " __________   ",
    "|          |\\ ",
    "| __   __  | |",
    "| \\ \\ / /  | |",
    "|  \\ V /   | |",
    "|   \\_/    | |",
    "|__________| |",
    "\\___________\\|",
  };

  std::vector<std::string> v_button_pressed = {
    "  __________  ",
    " |          |`",
    " | __   __  ||",
    " | \\ \\ / /  ||",
    " |  \\ V /   ||",
    " |   \\_/    ||",
    " |__________||",
    " `-----------`",
  };

  std::vector<std::string> bobber1 = {
    "            `              ",
    "                           ",
    "            `              ",
    "            `              ",
    "            .              ",
    "            .              ",
    "            |              ",
    "           _|_             ",
    "         /     \\           ",
    "       -|_______|_  _      ",
    "__  --_ |_______| --  _ ___",
    " ---  -. \\_ _  /.  -- -    ",
    "          --`    --        ",
  };


  std::vector<std::string> bobber2 = {
    "            `              ",
    "                           ",
    "            `              ",
    "            `              ",
    "            .              ",
    "            .              ",
    "            |              ",
    "            |              ",
    "           _|_             ",
    "       --/     \\__  _      ",
    "__  --_ |_______| --  _ ___",
    " ---  -.| _ _ __|,.-- -    ",
    "         '--   ' --        ",
  };

  std::vector<std::string> bobber3 = {
    "            `             ",
    "                          ",
    "            `             ",
    "            `             ",
    "            .             ",
    "            .             ",
    "            |             ",
    "            |             ",
    "            |             ",
    "       --  _|_  __  _     ",
    "__  --_  /     \\ --  _ ___",
    " ---  -.| _ _ __|,.-- -   ",
    "        ; --    ;--       ",
  };

  std::vector<std::string> exclamation_mark = {
    "  __  ",
    " |  | ",
    " |  | ",
    " |  | ",
    " |  | ",
    " |  | ",
    " \\__/ ",
    "  __  ",
    " /  \\ ",
    " \\__/ ",
  };


  std::vector<std::string> x_text = {
    "__  __",
    "\\ \\/ /",
    " >  < ",
    "/_/\\_\\",
  };

  std::vector<std::string> common_text = {
    "  ____                                      ",
    " / ___|___  _ __ ___  _ __ ___   ___  _ __  ",
    "| |   / _ \\| '_ ` _ \\| '_ ` _ \\ / _ \\| '_ \\ ",
    "| |__| (_) | | | | | | | | | | | (_) | | | |",
    " \\____\\___/|_| |_| |_|_| |_| |_|\\___/|_| |_|",
  };

  std::vector<std::string> uncommon_text = {
    " _   _                                                 ",
    "| | | |_ __   ___ ___  _ __ ___  _ __ ___   ___  _ __  ",
    "| | | | '_ \\ / __/ _ \\| '_ ` _ \\| '_ ` _ \\ / _ \\| '_ \\ ",
    "| |_| | | | | (_| (_) | | | | | | | | | | | (_) | | | |",
    " \\___/|_| |_|\\___\\___/|_| |_| |_|_| |_| |_|\\___/|_| |_|",
  };

  std::vector<std::string> rare_text = {
    " ____                ",
    "|  _ \\ __ _ _ __ ___ ",
    "| |_) / _` | '__/ _ \\",
    "|  _ < (_| | | |  __/",
    "|_| \\_\\__,_|_|  \\___|",
  };

  std::vector<std::string> legendary_text = {
    " _                              _                  ",
    "| |    ___  __ _  ___ _ __   __| | __ _ _ __ _   _ ",
    "| |   / _ \\/ _` |/ _ \\ '_ \\ / _` |/ _` | '__| | | |",
    "| |__|  __/ (_| |  __/ | | | (_| | (_| | |  | |_| |",
    "|_____\\___|\\__, |\\___|_| |_|\\__,_|\\__,_|_|   \\__, |",
    "           |___/                             |___/ ",
  };

  std::vector<std::string> catfish_text = {
    "  ____      _    __ _     _     ",
    " / ___|__ _| |_ / _(_)___| |__  ",
    "| |   / _` | __| |_| / __| '_ \\ ",
    "| |__| (_| | |_|  _| \\__ \\ | | |",
    " \\____\\__,_|\\__|_| |_|___/_| |_|",
  };

  std::vector<std::string> bass_text = {
    " ____                ",
    "| __ )  __ _ ___ ___ ",
    "|  _ \\ / _` / __/ __|",
    "| |_) | (_| \\__ \\__ \\",
    "|____/ \\__,_|___/___/",
  };

  std::vector<std::string> cod_text = {
    "  ____          _ ",
    " / ___|___   __| |",
    "| |   / _ \\ / _` |",
    "| |__| (_) | (_| |",
    " \\____\\___/ \\__,_|",
  };

  std::vector<std::string> trout_text = {
    " _____                _   ",
    "|_   _| __ ___  _   _| |_ ",
    "  | || '__/ _ \\| | | | __|",
    "  | || | | (_) | |_| | |_ ",
    "  |_||_|  \\___/ \\__,_|\\__|",
  };

  std::vector<std::string> bluegill_text = {
    " ____  _                  _ _ _ ",
    "| __ )| |_   _  ___  __ _(_) | |",
    "|  _ \\| | | | |/ _ \\/ _` | | | |",
    "| |_) | | |_| |  __/ (_| | | | |",
    "|____/|_|\\__,_|\\___|\\__, |_|_|_|",
    "                    |___/       ",
  };

  std::vector<std::string> salmon_text = {
    " ____        _                       ",
    "/ ___|  __ _| |_ __ ___   ___  _ __  ",
    "\\___ \\ / _` | | '_ ` _ \\ / _ \\| '_ \\ ",
    " ___) | (_| | | | | | | | (_) | | | |",
    "|____/ \\__,_|_|_| |_| |_|\\___/|_| |_|",
  };

  std::vector<std::string> crawfish_text = {
    "  ____                     __ _     _     ",
    " / ___|_ __ __ ___      __/ _(_)___| |__  ",
    "| |   | '__/ _` \\ \\ /\\ / / |_| / __| '_ \\ ",
    "| |___| | | (_| |\\ V  V /|  _| \\__ \\ | | |",
    " \\____|_|  \\__,_| \\_/\\_/ |_| |_|___/_| |_|",
  };

  std::vector<std::string> eel_text = {
    " _____     _ ",
    "| ____|___| |",
    "|  _| / _ \\ |",
    "| |__|  __/ |",
    "|_____\\___|_|",
  };

  std::vector<std::string> octopus_text = {
    "  ___       _                        ",
    " / _ \\  ___| |_ ___  _ __  _   _ ___ ",
    "| | | |/ __| __/ _ \\| '_ \\| | | / __|",
    "| |_| | (__| || (_) | |_) | |_| \\__ \\",
    " \\___/ \\___|\\__\\___/| .__/ \\__,_|___/",
    "                    |_|              ",
  };

  std::vector<std::string> unknown_fish_text = {
  " ___ ___ ___ ",
  "|__ \\__ \\__ \\",
  "  / / / / / /",
  " |_| |_| |_| ",
  " (_) (_) (_) ",
  };

  std::vector<std::string> zero_text = {
  "   ___  ",
  "  / _ \\ ",
  " | | | |",
  " | |_| |",
  "  \\___/ ",
  };

  std::vector<std::string> one_text = {
  "    _   ",
  "   / |  ",
  "   | |  ",
  "   | |  ",
  "   |_|  ",
  };

  std::vector<std::string> two_text = {
  "  ____  ",
  " |___ \\ ",
  "   __) |",
  "  / __/ ",
  " |_____|",
  };

  std::vector<std::string> three_text = {
  "  _____ ",
  " |___ / ",
  "   |_ \\ ",
  "  ___) |",
  " |____/ ",
  };

  std::vector<std::string> four_text = {
  " _  _   ",
  "| || |  ",
  "| || |_ ",
  "|__   _|",
  "   |_|  ",
  };

  std::vector<std::string> five_text = {
  "  ____  ",
  " | ___| ",
  " |___ \\ ",
  "  ___) |",
  " |____/ ",
  };

  std::vector<std::string> six_text = {
  "   __   ",
  "  / /_  ",
  " | '_ \\ ",
  " | (_) |",
  "  \\___/ ",
  };

  std::vector<std::string> seven_text = {
  "  _____ ",
  " |___  |",
  "    / / ",
  "   / /  ",
  "  /_/   ",
  };

  std::vector<std::string> eight_text = {
  "   ___  ",
  "  ( _ ) ",
  "  / _ \\ ",
  " | (_) |",
  "  \\___/ ",
  };

  std::vector<std::string> nine_text = {
  "   ___  ",
  "  / _ \\ ",
  " | (_) |",
  "  \\__, |",
  "    /_/ ",
  };

  std::vector<std::string> period_text = {
  "",
  "",
  "",
  " _ ",
  "(_)",
  };

  std::vector<std::string> m_text = {
  "",
  " _ __ ___  ",
  "| '_ ` _ \\ ",
  "| | | | | |",
  "|_| |_| |_|",
  };

  std::vector<std::string> new_text = {
  " _ __   _____      __",
  "| '_ \\ / _ \\ \\ /\\ / /",
  "| | | |  __/\\ V  V / ",
  "|_| |_|\\___| \\_/\\_/  ",
  };

  std::vector<std::string> next_arrow_text = {
  " ____|\\ ",
  "|      \\",
  "|____  /",
  "     |/ ",
  };

  std::vector<std::string> prev_arrow_text = {
  " /|____ ",
  "/      |",
  "\\  ____|",
  " \\|     ",
  };
}
